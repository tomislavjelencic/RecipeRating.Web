@using RecipeRating.Model
@using RecipeRating.Web.Helpers
@model PaginatedList<Category>

@{
    ViewData["Title"] = "Categories";
}

<h1>Categories</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get" class="mb-3">
    <div class="form-row">
        <div class="col-3">
            <input type="text" class="form-control" name="SearchString" value="@ViewData["CurrentFilter"]" placeholder="Search by name" />
        </div>
        <div class="col-2">
            <input type="submit" value="Apply filter" class="form-control btn btn-primary" />
        </div>
        <div class="col-2">
            <a class="form-control btn btn-light" asp-action="Index">Undo filter</a>
        </div>
    </div>
</form>

<table class="table">
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                <a asp-area="" asp-controller="Dishes" asp-action="Index" asp-route-categoryFilter="@item.Id">@Html.DisplayFor(modelItem => item.Name)</a>
            </td>
            <td>
               <img src="@item.ImageUrl" alt="Image" width="100">
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                @*<a asp-action="Details" asp-route-id="@item.Id">Details</a> |*@
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
